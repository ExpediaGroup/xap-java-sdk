openapi: 3.0.1
info:
  title: EWSCar API
  description: EWSCar API allow users search cars and check car details.
  version: v3
  x-eg-lifecycle: LIVE
  x-eg-api-tags:
    - EWS
    - XAP
    - Cars
    - CarSearch
    - CarDetails
tags:
  - name: Cars Listings
  - name: Cars Detail
servers:
  - url: 'https://apim.expedia.com'
    description: Production Server
paths:
  /cars/listings:
    get:
      tags: ["Cars Listings"]
      summary: Search Expedia car inventory
      description: 'Search Expedia car inventory by date, pickup, and dropoff location to return a listing of available cars for hire.'
      operationId: get-cars-listings
      parameters:
        - name: key
          in: header
          description: Unique identifier assigned to partner.
          required: true
          schema:
            type: string
          example: 11111111-2222-3333-4444-555555555555
        - name: Partner-Transaction-Id
          in: header
          description: '[Not consumed by Expedia] Partner-generated identifier.'
          required: true
          schema:
            type: string
          example: BestTravel-123456-798101112
        - name: pickup.airport
          in: query
          description: 'Three letter code for the airport at which the customer would like to pick up the car.Supported values: standard 3 letter IATA Airport Code.Please see a full list of Car Vendor Codes and Airport Codes in the Related Links Section below.Cannot coexist with other pickup parameters, only one pickup parameter is allowed per request.'
          schema:
            type: string
          example: SEA
        - name: pickup.city
          in: query
          description: 'The name of the city in which the customer would like to pick up the car.Search results will include up to 40 rental locations that are closest to the center point of the search.Cannot coexist with other pickup parameters, only one pickup parameter is allowed per request.'
          schema:
            type: string
        - name: pickup.address
          in: query
          description: 'The address of a car rental location where the customer would like to pick up the car.Cannot coexist with other pickup parameters, only one pickup parameter is allowed per request.'
          schema:
            type: string
          example: Seattle
        - name: pickup.geoLocation
          in: query
          description: 'The latitude and longitude that defines where the customer would like to pick up the car.Latitude and longitude are separated by comma.South latitudes and West longitudes are represented by negative values.Cannot coexist with other pickup parameters, only one pickup parameter is allowed per request.'
          schema:
            type: string
          example: 111.00,-22.00
        - name: pickup.radius
          in: query
          description: 'Radius used in conjunction with a point to define the search area when searching by lat/ long, city or address.See '' unit'' parameter below to select miles or kilometers.If no value is specified a default value of 25 will be assumed.'
          schema:
            type: integer
          example: 10
        - name: dropOff.airport
          in: query
          description: 'Three letter code for the airport at which the customer would like to drop off the car.Supported values: standard 3 letter IATA Airport Code.Please see a full list of Car Vendor Codes and Airport Codes in the Related Links Section below.Cannot coexist with other drop off parameters, only one drop off parameter is allowed per request.If no drop off location is specified, it is assumed that the customer will be dropping the car off at the same location at which they picked it up.'
          schema:
            type: string
          example: SEA
        - name: dropOff.city
          in: query
          description: 'City name for the location at which the customer would like to drop off the car.Cannot coexist with other drop off parameters, only one drop off parameter is allowed in a request.If no drop off location is specified, it is assumed that the customer will be dropping the car off at the same location at which they picked it up.'
          schema:
            type: string
        - name: dropOff.address
          in: query
          description: 'Address for the location at which the customer would like to drop off the car.Cannot coexist with other drop off parameters, only one drop off parameter is allowed in a request.If no drop off location is specified, it is assumed that the customer will be dropping the car off at the same location at which they picked it up.'
          schema:
            type: string
          example: Seattle
        - name: dropOff.geoLocation
          in: query
          description: 'Latitude and longitude for the location at which the customer would like to drop off the car.Latitude and longitude are separated by comma.South latitudes and West longitudes are represented by negative values.Cannot coexist with other drop off parameters, only one drop off parameter is allowed per request.If no drop off location is specified, it is assumed that the customer will be dropping the car off at the same location at which they picked it up.'
          schema:
            type: string
          example: 111.00,-22.00
        - name: dropOff.radius
          in: query
          description: 'Radius used in conjunction with a point to define the search area when searching by lat/ long, city or address.See '' unit'' parameter below to select miles or kilometers.If no value is specified a default value of 25 will be assumed.Note: The pickup radius value will be used (instead of the the drop-off radius) when the requested pickup and drop-off city/address are exactly the same.'
          schema:
            type: integer
          example: 10
        - name: pickupTime
          in: query
          description: 'Requested car pickup date and time.Date should be ISO8601 Date format.The default TIME is 10:30:00.The supported search window is today to 330 days in the future.(Note that each rental counter has different hours of operation. If you select a time in the middle of the night there may be no inventory available as all locations may be closed.)'
          required: true
          schema:
            type: string
            format: date-time
          example: '2021-06-05T10:00'
        - name: dropOffTime
          in: query
          description: 'Requested car drop off date and time. Date should be ISO8601 Date format.The supported search window is today to 330 days in the future.Note: The dropOffTime must be at least 2 hours later than the pickupTime for the request to be valid.'
          required: true
          schema:
            type: string
            format: date-time
          example: '2021-06-06T10:00'
        - name: sortType
          in: query
          description: 'Method of sorting the car search results.Supported value: Price.If no value is present a sort by ''price'' will be assumed.'
          schema:
            type: string
            enum:
              - Price
        - name: sortOrder
          in: query
          description: 'Order of sorting the car search results.Supported values: ASC, DESCIf no value is present a sort order of ''ascending'' will be assumed.'
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: limit
          in: query
          description: The maximum number of search results that will be returned by the query.
          schema:
            type: integer
          example: 100
        - name: suppliers
          in: query
          description: 'A list of supplier ids or supplier names to be used to filter search results.Multiple supplier names or ids may be separated by comma.Please see a full list of Expedia Vendor Codes & Names in the Related Links Section below.The max count of suppliers requested is limited to 20.Note: while you may filter using either supplier name or supplier ID, it is recommended that you use supplier ID, as this value will remain consistent in the event of a merger or other name change by the supplier.'
          explode: false
          schema:
            type: array
            items:
              type: string
            uniqueItems: true
          example:
            - 11
            - 12
        - name: carClasses
          in: query
          description: A list of car classes to be used to filter search results.Multiple car classes may be separated by comma.Please see Class List in the Related Links Section below for all options.
          explode: false
          schema:
            type: array
            items:
              type: string
            uniqueItems: true
          example: 'economy'
        - name: discount1.supplier
          in: query
          description: 'Name or ID of the supplier who issued a coupon or discount code.NOTE: Only ONE discount code per transaction is currently supported by the API. If you enter more than one discount code, only the first one will be honored.Please see a full list of Expedia Vendor Codes & Names in the Related Links Section below.'
          schema:
            type: string
          example: Avis
        - name: discount1.type
          in: query
          description: 'The type of discount to be applied.Supported values: CorpDiscount | Coupon.'
          schema:
            type: string
            enum:
              - CorpDiscount
              - Coupon
        - name: discount1.code
          in: query
          description: The code of the discount to be applied.
          schema:
            type: string
          example: GB1234
        - name: transmissions
          in: query
          description: A list of car transmission drive codes to be used to filter search results.Multiple car classes may be separated by a comma.Please see a full list of Transmission Drive Codes in the Related Links Section below.
          explode: false
          schema:
            type: array
            items:
              type: string
            uniqueItems: true
        - name: airConditioning
          in: query
          description: Specify whether to filter for cars that include or exclude air conditioning.
          schema:
            type: boolean
        - name: carTypes
          in: query
          description: A list of car types to be used to filter search results.Multiple car types may be separated by comma.Please see a full list of Car Type Codes in the Related Links Section below.
          explode: false
          schema:
            type: array
            items:
              type: string
            uniqueItems: true
          example: C,E
        - name: unit
          in: query
          description: 'The distance unit for the radius of a location-based search, or the distance between the center point of a search and the vendor location.Supported values: KM | MI.Default value: KM.'
          schema:
            type: string
            enum:
              - KM
              - MI
        - name: driverAge
          in: query
          description: The age of the driver that will be renting the car.This value is required in the UK and optional elsewhere.
          schema:
            type: integer
          example: 18
        - name: links
          in: query
          description: 'WS = WebSearch, AD = ApiDetails, WD = WebDetails'
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - WS
                - AD
                - WD
        - name: source
          in: query
          description: 'Indicates the source where the request is coming from.The available values for the source as below:browser - The value "browser" represents that the client is traditional website.mobile - The value "mobile" represents that the client is mobile.all - The value "all" indicates that the client includes both browser and mobile.Only one source value may be used at a time.'
          schema:
            type: string
            enum:
              - browser
              - mobile
              - all
      responses:
        '200':
          description: car listing response
          content:
            application/vnd.exp-car.v3+json:
              schema:
                $ref: '#/components/schemas/CarListingsResponse'
            application/vnd.exp-car.v3+xml:
              schema:
                $ref: '#/components/schemas/CarListingsResponse'
        '400':
          description: errors response
          content:
            application/vnd.exp-car.v3+json:
              schema:
                $ref: '#/components/schemas/Errors'
              examples:
                Errors:
                  description: Errors
                  value:
                    Errors:
                      - Code: INVALID_LINKS
                        Description: 'Invalid links. Allowed value are:[WS, AD, WD].'
                    TransactionId: 583b7277-772a-4802-8ac7-bcdf978abbdb
            application/vnd.exp-car.v3+xml:
              schema:
                $ref: '#/components/schemas/DisambiguationResponse'
              examples:
                DisambiguationResponse:
                  description: DisambiguationResponse
                  value:
                    Errors:
                      - Code: AMBIGUOUS_LOCATION
                        DetailCode: MULTIPLE_AMBIGUOUS_PICKUP_LOCATION
                        Description: Multiple pickup locations found.
                        LocationKeyword: portland
                        LocationOptions:
                          - Type: MULTICITY
                            RequestedLocation: 'Portland (and vicinity)'
                            Locations:
                              - Name: Portland (and vicinity)
                                LocationId: seat001
                            RegionId: '178299'
                            ShortName: Portland (and vicinity)
                            AirportCode: PDX
                            Address: 'Portland (and vicinity), Oregon, United States Of America'
                            Country:
                              Name: United States of America
                              IsoCode2: US
                              IsoCode3: USA
                            GeoLocation:
                              Latitude: '45.516740'
                              Longitude: '-122.680950'
                          - Type: CITY
                            RequestedLocation: 'Portland (and vicinity)'
                            Locations:
                              - Name: Portland (and vicinity)
                                LocationId: seat001
                            RegionId: '6174134'
                            ShortName: Downtown Portland
                            AirportCode: PWM
                            Address: 'Downtown Portland, Portland, Maine, United States of America'
                            Country:
                              Name: United States of America
                              IsoCode2: US
                              IsoCode3: USA
                            GeoLocation:
                              Latitude: '43.655764'
                              Longitude: '-70.255458'
                    TransactionId: 81e0a6d6-8ca9-4adf-a1c8-08ba0d11dcef
        '401':
          description: Unauthorized or Invalid authentication credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                unauthorized:
                  value: '{message":"Unauthorized"}'
                Invalid authentication credentials:
                  value: '{"message":"Invalid authentication credentials"}'
        '403':
          description: cannot consume this service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                cannot consume this service:
                  value: '{"message":"You cannot consume this service"}'
        '404':
          description: No Route matched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                no Route matched:
                  value: '{"message":"no Route matched with those values"}'
        '429':
          description: API rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                API rate limit exceeded:
                  value: '{"message":"API rate limit exceeded"}'
        '503':
          description: service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                name resolution failed:
                  value: '{"message":"name resolution failed"}'
        '504':
          description: upstream server is timing out
          content:
            text/plain:
              examples:
                upstream server is timing out:
                  value: The upstream server is timing out
      security:
        - basicAuth: []
  /cars/details/{offerToken}:
    get:
      tags: ["Cars Detail"]
      summary: Get Extended information with a single car offer
      description: 'Extended information about the rates, charges, fees, and other terms associated with a single car offer.'
      operationId: get-car-details
      parameters:
        - name: key
          in: header
          description: Unique identifier assigned to partner.
          required: true
          schema:
            type: string
          example: 11111111-2222-3333-4444-555555555555
        - name: Partner-Transaction-Id
          in: header
          description: '[Not consumed by Expedia] Partner-generated identifier.'
          required: true
          schema:
            type: string
          example: BestTravel-123456-798101112
        - name: price
          in: query
          description: The total price for the product.
          required: true
          schema:
            type: string
        - name: currency
          in: query
          description: Price currency code
          required: true
          schema:
            type: string
          example: USD
        - name: source
          in: query
          description: source mobile  - The value mobile represents that the client is mobile.
          schema:
            type: string
          example: mobile
        - name: offerToken
          in: path
          description: car offer token
          required: true
          schema:
            type: string
          example: OFHSDJSJDFLJSDLKFJSDLJFLSDJFLSJDFL
      responses:
        '200':
          description: car details successful response
          content:
            application/vnd.exp-car.v3+json:
              schema:
                $ref: '#/components/schemas/CarDetailsResponse'
            application/vnd.exp-car.v3+xml:
              schema:
                $ref: '#/components/schemas/CarDetailsResponse'
        '400':
          description: car details user fault response
          content:
            application/vnd.exp-car.v3+json:
              schema:
                $ref: '#/components/schemas/Errors'
            application/vnd.exp-car.v3+xml:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized or Invalid authentication credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                unauthorized:
                  value: '{message":"Unauthorized"}'
                Invalid authentication credentials:
                  value: '{"message":"Invalid authentication credentials"}'
        '403':
          description: cannot consume this service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                cannot consume this service:
                  value: '{"message":"You cannot consume this service"}'
        '404':
          description: No Route matched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                no Route matched:
                  value: '{"message":"no Route matched with those values"}'
        '429':
          description: API rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                API rate limit exceeded:
                  value: '{"message":"API rate limit exceeded"}'
        '500':
          description: car details application error response
          content:
            application/vnd.exp-car.v3+json:
              schema:
                $ref: '#/components/schemas/Errors'
            application/vnd.exp-car.v3+xml:
              schema:
                $ref: '#/components/schemas/Errors'
        '503':
          description: service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                name resolution failed:
                  value: '{"message":"name resolution failed"}'
        '504':
          description: upstream server is timing out
          content:
            text/plain:
              examples:
                upstream server is timing out:
                  value: The upstream server is timing out
      security:
        - basicAuth: []
components:
  schemas:
    AdditionalFee:
      required:
        - Amount
        - FinanceCategory
        - FinanceSubCategory
        - IsRequired
      type: object
      properties:
        IsRequired:
          type: boolean
          description: Indicates whether this additional fee is mandatory.
          example: true
        FinanceCategory:
          type: string
          description: Category of the fee / Coverages
          example: Fee
        FinanceSubCategory:
          type: string
          description: Sub category of the fee / Coverages .
          example: Drop
        Amount:
          $ref: '#/components/schemas/Money'
        Description:
          type: string
          description: Description of the fee.
          example: DropOffCharge
        Deductible:
          $ref: '#/components/schemas/Deductible'
      description: List of additional fees including both mandatory and optional fees.such as young driver fee/drop off fee /CollisionDamageWaiver
    Address:
      required:
        - Address1
        - City
        - Country
      type: object
      properties:
        Address1:
          type: string
          description: 'Street Number, Street Name, or PO Box'
          example: 724 Pine St
        Address2:
          type: string
          description: 'Apartment, Floor, Suite, Bldg # or more specific information about Address1.'
          example: Second Floor
        Suite:
          type: string
          description: Suite/apartment number
          example: '123'
        City:
          type: string
          description: The city
          example: New York
        Province:
          type: string
          description: The state or province
          example: NY
        Country:
          type: string
          description: 3-letter code for the country
          example: USA
        PostalCode:
          type: string
          description: Zip/postal code
          example: '98004'
      description: Address information
    CancellationPolicy:
      type: object
      properties:
        Cancellable:
          type: boolean
          description: Indicates if this car can be cancelled (free cancel or penalty cancel)
          example: true
        FreeCancellation:
          type: boolean
          description: Indicates if this car may be cancelled without a penalty.
          example: true
        FreeCancellationEndDateTime:
          type: string
          description: Indicates the latest time that the car can be cancelled for free.
          format: date-time
        PenaltyRules:
          type: array
          description: Container for penalty rules
          items:
            $ref: '#/components/schemas/PenaltyRule'
        NonCancellableDateTimeRange:
          $ref: '#/components/schemas/NonCancellableDateTimeRange'
      description: Cancellation Policy Container.
    Capacity:
      required:
        - AdultCount
      type: object
      properties:
        AdultCount:
          type: integer
          description: The typical number of adults that can fit comfortably in the car.
          format: int64
          example: 4
        ChildCount:
          type: integer
          description: The typical number of children that can fit comfortably in the car.
          format: int64
          example: 0
        SmallLuggageCount:
          type: integer
          description: The typical number of small pieces of luggage that fit in the cargo space.
          format: int64
          example: 2
        LargeLuggageCount:
          type: integer
          description: The typical number of large pieces of luggage that fit in the cargo space.
          format: int64
          example: 2
      description: Capacity for car's properties.
    Car:
      required:
        - CancellationPolicy
        - DropOffDetails
        - Id
        - PickupDetails
        - Price
        - Supplier
        - VehicleDetails
      type: object
      properties:
        Id:
          type: string
          description: 'Uniquely identifies a Car Offer.Note: since pay-online and pay-at-the-counter Car Offers have the same associated Rate Code, the Offer ID is the only unique identifier to differentiate between the two offers when referencing or booking.'
          example: ECAR-39--1Trip-SEAC005-SEAC005
        DataTimeStamp:
          type: string
          description: DataTimeStamp
          format: date-time
          example: '2021-03-09T07:08:00Z'
        OnlineCheckIn:
          type: boolean
          description: Indicate whether the supplier supports online checkin
          example: true
        SkipTheCounter:
          type: boolean
          description: Indicate whether the supplier supports skip the counter
          example: true
        VehicleDetails:
          $ref: '#/components/schemas/VehicleDetails'
        Supplier:
          $ref: '#/components/schemas/Supplier'
        PickupDetails:
          $ref: '#/components/schemas/VendorLocationDetails'
        DropOffDetails:
          $ref: '#/components/schemas/VendorLocationDetails'
        Links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Link'
          description: A map of links to other Car APIs or Expedia websites.
          xml:
            wrapped: true
        RateDetails:
          $ref: '#/components/schemas/RateDetails'
        Price:
          $ref: '#/components/schemas/Price'
        ReferencePrice:
          $ref: '#/components/schemas/Money'
        AdditionalFees:
          type: array
          description: List of additional fees including both mandatory and optional fees.such as young driver fee/drop off fee /CollisionDamageWaiver
          items:
            $ref: '#/components/schemas/AdditionalFee'
        CancellationPolicy:
          $ref: '#/components/schemas/CancellationPolicy'
        NoShowPenalty:
          $ref: '#/components/schemas/PenaltyType'
        Images:
          type: array
          description: List of image resources of the car product.
          items:
            $ref: '#/components/schemas/Image'
        Rating:
          $ref: '#/components/schemas/RatingWithoutDetails'
      description: List of cars matching the search criteria.
    CarCategory:
      required:
        - Code
        - Value
      type: object
      properties:
        Code:
          type: string
          description: Car category code.
          example: M
        Value:
          type: string
          description: Car category value.
          example: Mini
      description: 'Car category. Please find list of Car Type Codes in https://expediaintegration.zendesk.com/hc/en-us/articles/115008631767'
    CarListingsResponse:
      required:
        - CarCount
        - TransactionId
      type: object
      properties:
        Warnings:
          type: array
          description: Container for warning codes
          items:
            $ref: '#/components/schemas/Warning'
        TransactionId:
          type: string
          description: A unique identifier for this transaction.
          example: 1111111-2222-3333-4444-55555555555
        CarCount:
          type: integer
          description: The number of cars offers returned in the response.
          format: int64
          example: 1
        Cars:
          type: array
          description: List of cars matching the search criteria.
          items:
            $ref: '#/components/schemas/Car'
      xml:
        name: CarListingsResponse
    CarType:
      required:
        - Code
        - Value
      type: object
      properties:
        Code:
          type: string
          description: Car type code.
          example: C
        Value:
          type: string
          description: Car type value.
          example: 2/4 Door
      description: 'Car type. Please find list of Car Type Codes in https://expediaintegration.zendesk.com/hc/en-us/articles/115002516708'
    Country:
      required:
        - IsoCode2
        - IsoCode3
        - Name
      type: object
      properties:
        Name:
          type: string
          description: country name
          example: Ireland
        Code:
          type: string
          description: 3-letter code for the country
          example: IRL
        IsoCode2:
          type: string
          description: 2-letter code for the country
          example: IE
        IsoCode3:
          type: string
          description: 3-letter code for the country
          example: IRL
      description: Container for disambiguation country information
    DateRange:
      required:
        - EndDate
        - StartDate
      type: object
      properties:
        StartDate:
          type: string
          description: Start date at pickup location of the period.
          format: date
          example: '2021-06-27'
        EndDate:
          type: string
          description: End date at pickup location of the period.
          format: date
          example: '2021-06-28'
      description: Date range of the period.
    DateTimePeriod:
      required:
        - DateRange
      type: object
      properties:
        DateRange:
          $ref: '#/components/schemas/DateRange'
        TimeRanges:
          type: array
          description: A list of time range to indicate the operation hours of the date range.
          items:
            $ref: '#/components/schemas/TimeRange'
      description: A List of date time periods to indicate the vendor business hours for the pickup time.
    Deductible:
      type: object
      properties:
        ExcessAmount:
          $ref: '#/components/schemas/Money'
        LiabilityAmount:
          $ref: '#/components/schemas/Money'
        DeductibleAmount:
          $ref: '#/components/schemas/Money'
      description: Indicate whether it is deductible
    Discount:
      required:
        - Code
        - Type
      type: object
      properties:
        Type:
          type: string
          description: 'Discount type. Supported values : CorpDiscount | Coupon.'
          example: CorpDiscount
        Code:
          type: string
          description: Discount code.
          example: G811490
      description: List of discount information.
    Distance:
      required:
        - Value
      type: object
      properties:
        Value:
          type: string
          description: The number of miles/kilometers of the distance (specified by the Unit).
          example: '75'
        Unit:
          type: string
          description: The unit (KM or MI) for the distance.
          example: KM
        Direction:
          type: string
          description: 'The direction of the location from the search ''center''.Possible values are: N,S,W,E,NW,NE,SW,SE'
          example: 'N'
      description: The extra distance information.
    ExtraCostPerDistance:
      required:
        - Cost
        - Distance
      type: object
      properties:
        Distance:
          $ref: '#/components/schemas/Distance'
        Cost:
          $ref: '#/components/schemas/Money'
      description: Extra cost for each increment of distance used.
    FuelAC:
      required:
        - Code
        - Value
      type: object
      properties:
        Code:
          type: string
          description: Car FuelAC code.
          example: D
        Value:
          type: string
          description: Car FuelAC value.
          example: Diesel Air
      description: 'Car fuel type and whether Air Conditioning is included. Please find list of Car Fuel AC Codes in https://expediaintegration.zendesk.com/hc/en-us/articles/115005378328'
    GeoLocation:
      required:
        - Latitude
        - Longitude
      type: object
      properties:
        Latitude:
          type: string
          description: Latitude of the location.
          example: '38.184978'
        Longitude:
          type: string
          description: Longitude of the location.
          example: '85.7412'
        Obfuscated:
          type: boolean
      description: Container for Geo location.
    Image:
      required:
        - Href
        - Size
        - Type
      type: object
      properties:
        Type:
          type: string
          description: 'Resource typeSupported values :Thumbnail - (70 pixels wide)Image - (165 pixels wide)'
        Size:
          type: string
          description: 'Size of imageSupported values :s - (165 pixels wide)t - (70 pixels wide)'
        Href:
          type: string
          description: URL for the image.
      description: List of image resources of the car product.
    Link:
      required:
        - Href
      type: object
      properties:
        Accept:
          type: string
          description: Accept header.
        Method:
          type: string
          description: HTTP method to connect.
          example: GET
        Href:
          type: string
          description: HATEOAS URL to fetch details.
      description: 'A map of links to other Car APIs. possible link name: ApiBooking'
    Location:
      required:
        - LocationId
      type: object
      properties:
        Type:
          type: string
          description: The type of location code (MULTICITY | METROCODE).
          example: MULTICITY
        Id:
          type: string
          description: Expedia Region ID of the specified airport.
          example: '6139103'
        Name:
          type: string
          description: Location Name
          example: Seattle-Tacoma International Airport
        Code:
          type: string
          description: Location Code
          example: SEA
        LocationId:
          type: string
          description: Location id.
          example: SEAT001
        Address:
          $ref: '#/components/schemas/Address'
        PointOfInterest:
          type: string
        GeoLocation:
          $ref: '#/components/schemas/GeoLocation'
        Neighborhood:
          $ref: '#/components/schemas/Neighborhood'
        RegionId:
          type: integer
          description: RegionId the location resides in.
          format: int64
          example: 6200275
        Country:
          $ref: '#/components/schemas/Country'
      description: Container for list of possible locations that could be used to disambiguate the query.
    Mileage:
      required:
        - FreeDistance
        - FreeDistanceRatePeriod
      type: object
      properties:
        FreeDistance:
          $ref: '#/components/schemas/Distance'
        FreeDistanceRatePeriod:
          type: string
          description: Rate period for free distance.
          example: Daily
        ExtraCostPerDistance:
          $ref: '#/components/schemas/ExtraCostPerDistance'
      description: A list of charges to be levied based on the mileage driven.
    Money:
      required:
        - Currency
        - Value
      type: object
      properties:
        Value:
          type: string
          description: The value of the element being defined.
          example: '21.9'
        Currency:
          type: string
          description: The ISO 4217 Currency Code that the value is expressed in.
          example: USD
        LocalCurrencyPrice:
          $ref: '#/components/schemas/Money'
      description: Price of Special equipment.
    Neighborhood:
      required:
        - Id
        - Name
      type: object
      properties:
        Id:
          type: string
          description: Neighborhood id.
          example: '6160232'
        Name:
          type: string
          description: Neighborhood name.
          example: Le Pharo
      description: Geography entities which are typically contained within a city. This includes the categories neighborhood and point of interest. Low level regions are not a formally defined concept in the geography model.
    NonCancellableDateTimeRange:
      required:
        - EndDateTime
        - StartDateTime
      type: object
      properties:
        StartDateTime:
          type: string
          description: The time of this non-cancellable window starts
          format: date-time
        EndDateTime:
          type: string
          description: The time of this non-cancellable window ends
          format: date-time
      description: Container for non-cancellable date and time range element
    PenaltyRule:
      required:
        - EndDateTime
        - Penalty
        - StartDateTime
      type: object
      properties:
        Penalty:
          $ref: '#/components/schemas/PenaltyType'
        StartDateTime:
          type: string
          description: The time when this penalty window starts
          format: date-time
        EndDateTime:
          type: string
          description: The time when this penalty window ends
          format: date-time
      description: Container for penalty rules
    PenaltyType:
      required:
        - Currency
        - Type
        - Value
      type: object
      properties:
        Type:
          type: string
          description: 'What the penalty amount is based on. should be one of the following values:AMOUNT : it means the user is charged a fixed amount specified in the value node. Say 50$ for example.PERCENT : it means the user is charged a percentage of the base rate/total rate.PERDAY : it means the user is charged Per Day Price. For eg.., if the value is 2, it means the penalty amount will the Per day price of 2 days.'
        Value:
          type: string
          description: Value to indicate how many/much of the type listed above is going to be charged as a penalty.
          example: '20.0'
        Currency:
          type: string
          description: 'The currency of the amount, only valid when Type=AMOUNT'
          example: USD
      description: Container for no show penalty element
    Price:
      required:
        - TotalPrice
      type: object
      properties:
        RatePeriodUnitPrice:
          $ref: '#/components/schemas/Money'
        BasePrice:
          $ref: '#/components/schemas/Money'
        TaxesAndFees:
          $ref: '#/components/schemas/Money'
        TotalPriceDueAtBooking:
          $ref: '#/components/schemas/Money'
        TotalPrice:
          $ref: '#/components/schemas/Money'
      description: Pricing information for the rental.
    RateDetails:
      required:
        - PrePay
        - RatePeriod
      type: object
      properties:
        RatePeriod:
          type: string
          description: 'Rate period. Supported values: Daily,Weekly,Monthly,Trip,Weekend'
          example: Daily
        RateCode:
          type: string
          description: Rate plan identifier.
          example: A3D10
        PrePay:
          type: boolean
          description: Indicates whether this reservation should be paid at the time of booking (true) or at time of rental return (false).
          example: false
        CreditCardRequired:
          type: boolean
          description: Indicates whether credit card is required for booking.
          example: false
        Discounts:
          type: array
          description: List of discount information.
          items:
            $ref: '#/components/schemas/Discount'
        Mileages:
          type: array
          description: A list of charges to be levied based on the mileage driven.
          items:
            $ref: '#/components/schemas/Mileage'
        MobileRate:
          type: boolean
          description: Indicates whether car offer is mobile rate.
          example: true
      description: The rate detail information for a car offer.
    Rating:
      required:
        - RatingPercentage
        - RatingCount
      type: object
      properties:
        RatingPercentage:
          type: string
          description: The percentage of rating.
          example: '87%'
        RatingCount:
          type: string
          description: The total count of rating.
          example: '2092'
        RatingDetails:
          type: array
          description: List of all the details of rating.
          items:
            $ref: '#/components/schemas/RatingDetails'
      description: The rating of the car being offered.
    RatingWithoutDetails:
      required:
        - RatingPercentage
        - RatingCount
      type: object
      properties:
        RatingPercentage:
          type: string
          description: The percentage of rating.
          example: '87%'
        RatingCount:
          type: string
          description: The total count of rating.
          example: '2092'
      description: The rating of the car being offered.
    RatingDetails:
      required:
        - Category
        - Percentage
      type: object
      properties:
        Category:
          type: string
          description: The category of rating detail.
          example: 'Pick-up location'
        Percentage:
          type: string
          description: The percentage of rating detail category.
          example: '98'
      description: List of all the details of rating.
    Supplier:
      required:
        - Code
        - Id
        - Name
      type: object
      properties:
        Id:
          type: string
          description: Supplier ID.
          example: '3'
        Name:
          type: string
          description: Supplier Name.
          example: Advantage Rent-A-Car
        Code:
          type: string
          description: Supplier Code.
          example: AD
        LogoImageUrl:
          type: string
          description: Supplier Logo Image Url.
          example: 'https://media.int.expedia.com/int/cars/logos/NU.png'
      description: The supplier of the car being offered.
    TimeRange:
      required:
        - EndTime
        - StartTime
      type: object
      properties:
        StartTime:
          type: string
          description: Start time at pickup location of the date range.
          format: time
          example: '07:00:00'
        EndTime:
          type: string
          description: End time at pickup location of the date range.
          format: time
          example: '17:00:00'
      description: A list of time range to indicate the operation hours of the date range.
    TransmissionDrive:
      required:
        - Code
        - Value
      type: object
      properties:
        Code:
          type: string
          description: Car transmission and drive code.
          example: M
        Value:
          type: string
          description: Car transmission and drive value.
          example: Manual AWD
      description: 'Car transmission and drive. Please find list of Car Transmission Drive Codes in https://expediaintegration.zendesk.com/hc/en-us/articles/115005380028'
    VehicleDetails:
      required:
        - CarCategory
        - CarClass
        - CarType
        - FuelAC
        - TransmissionDrive
      type: object
      properties:
        Make:
          type: string
          description: Car manufacturer and model.
          example: Kia Rio
        CarClass:
          type: string
          description: Car category and type.
          example: Economy 2/4Door Car
        MinDoors:
          type: integer
          description: Minimal car door count.
          format: int32
          example: 2
        MaxDoors:
          type: integer
          description: Maximal car door count.
          format: int32
          example: 4
        FuelLevel:
          type: string
          description: Car fuel information.
          example: Full to Full
        CarCategory:
          $ref: '#/components/schemas/CarCategory'
        CarType:
          $ref: '#/components/schemas/CarType'
        TransmissionDrive:
          $ref: '#/components/schemas/TransmissionDrive'
        FuelAC:
          $ref: '#/components/schemas/FuelAC'
        Capacity:
          $ref: '#/components/schemas/Capacity'
      description: Specific information for a car.
    VendorLocationDetails:
      required:
        - DateTime
        - Location
      type: object
      properties:
        DateTime:
          type: string
          description: Pickup date and time.
          format: date-time
        ShuttleCategory:
          type: string
          description: The category of shuttle from the terminal to the rental car counter. Please find list of Shuttle Categories in the Related Links Section below.
          example: AirportShuttleToCounterAndCar
        Location:
          $ref: '#/components/schemas/Location'
        Distance:
          $ref: '#/components/schemas/Distance'
        OpenSchedule:
          type: array
          description: A List of date time periods to indicate the vendor business hours for the pickup time.
          items:
            $ref: '#/components/schemas/DateTimePeriod'
      description: Drop off information
    Warning:
      required:
        - Code
        - Description
      type: object
      properties:
        Code:
          type: string
          description: Standardized warning code.
          example: INVALID_CORPORATE_DISCOUNT_CODE
        Description:
          type: string
          description: Standardized warning description message.
          example: 'The Corporate DiscountCode ''811490'' is unavailable, but we found other rates for you.'
        OriginalPrice:
          $ref: '#/components/schemas/Money'
        NewPrice:
          $ref: '#/components/schemas/Money'
        ChangedAmount:
          $ref: '#/components/schemas/Money'
        ChangedPercentage:
          type: string
          description: |-
            The changed percentage.
            In the sample 2.97 means the changed percentage is 2.97%.
          example: '2.97'
        Links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Link'
          xml:
            wrapped: true
      description: Container for warning codes
    Error:
      required:
        - Code
        - Description
      type: object
      properties:
        Code:
          type: string
          description: Error code describing the issue
          example: AMBIGUOUS_LOCATION
        DetailCode:
          type: string
          description: Detailed error code describing the issue.
          example: MULTIPLE_AMBIGUOUS_LOCATION
        Description:
          type: string
          description: A simple description of what the error is.
          example: 'Multiple pickup locations found. '
        LocationKeyword:
          type: string
          description: The requested location that caused the error.
          example: 'Portland. '
        LocationOptions:
          type: array
          description: 'List for possible locations from which the customer must choose the best one to be re-submitted in the request. '
          items:
            $ref: '#/components/schemas/LocationOption'
      description: Container for error list.
    Errors:
      required:
        - Errors
        - TransactionId
      type: object
      properties:
        Errors:
          type: array
          description: Container for error list.
          items:
            $ref: '#/components/schemas/Error'
        TransactionId:
          type: string
          description: A unique identifier for the transaction.
          example: a9e371c4-89d9-4f9c-8df7-df105830e7fe
      xml:
        name: ErrorResponse
    LocationOption:
      required:
        - Locations
        - RequestedLocation
      type: object
      properties:
        RequestedLocation:
          type: string
          description: Location used in partner request.
          example: Paris
        Locations:
          type: array
          description: Container for list of possible locations that could be used to disambiguate the query.
          items:
            $ref: '#/components/schemas/Location'
        Type:
          type: string
          description: Type of the location.
          example: TRAINSTATION
        RegionId:
          type: string
          description: RegionId the location resides in.
          example: '6200275'
        ShortName:
          type: string
          description: The name of the location which matches the location keyword.
          example: Dublin Connolly Station
        AirportCode:
          type: string
          description: Indicates the nearest major airport to the location.
          example: DUB
        Address:
          type: string
          description: The address of the location.
          example: 'Dublin Connolly Station, Ireland'
        Country:
          $ref: '#/components/schemas/Country'
        GeoLocation:
          $ref: '#/components/schemas/GeoLocation'
      description: 'List for possible locations from which the customer must choose the best one to be re-submitted in the request. '
    DisambiguationResponse:
      required:
        - Errors
        - TransactionId
      type: object
      properties:
        Errors:
          type: array
          description: Container for error list.
          items:
            $ref: '#/components/schemas/Error'
        TransactionId:
          type: string
          description: A unique identifier for the transaction.
          example: ec007d1c-8d9d-4ed5-a880-da5b477d8c6c
      xml:
        name: DisambiguationResponse
    CarDetails:
      required:
        - CancellationPolicy
        - DropOffDetails
        - PickupDetails
        - Price
        - Supplier
        - VehicleDetails
      type: object
      properties:
        OnlineCheckIn:
          type: boolean
          description: Indicate whether the supplier supports online checkin
          example: true
        SkipTheCounter:
          type: boolean
          description: Indicate whether the supplier supports skip the counter
          example: true
        VehicleDetails:
          $ref: '#/components/schemas/VehicleDetails'
        Supplier:
          $ref: '#/components/schemas/Supplier'
        PickupDetails:
          $ref: '#/components/schemas/VendorLocationDetails'
        DropOffDetails:
          $ref: '#/components/schemas/VendorLocationDetails'
        RateDetails:
          $ref: '#/components/schemas/RateDetails'
        Price:
          $ref: '#/components/schemas/Price'
        ReferencePrice:
          $ref: '#/components/schemas/Money'
        AdditionalFees:
          type: array
          description: List of additional fees including both mandatory and optional fees.such as young driver fee/drop off fee /CollisionDamageWaiver
          items:
            $ref: '#/components/schemas/AdditionalFee'
        TaxesAndFeesDetails:
          type: array
          description: List of TaxesAndFees Details
          items:
            $ref: '#/components/schemas/TaxesAndFees'
        ExtraFeesDetails:
          type: array
          description: List of ExtraFeesDetails
          items:
            $ref: '#/components/schemas/ExtraFees'
        SpecialEquipments:
          type: array
          description: Description and costs of any optional special equipment that may be rented with the car.
          items:
            $ref: '#/components/schemas/Equipment'
        RentalLimits:
          $ref: '#/components/schemas/RentalLimits'
        CancellationPolicy:
          $ref: '#/components/schemas/CancellationPolicy'
        NoShowPenalty:
          $ref: '#/components/schemas/PenaltyType'
        CarPolicies:
          type: array
          description: A list of policies that apply to this car rental.
          items:
            $ref: '#/components/schemas/CarPolicy'
        Images:
          type: array
          description: List of image resources of the car product.
          items:
            $ref: '#/components/schemas/Image'
        Rating:
          $ref: '#/components/schemas/Rating'
      description: Details of requested car.
    CarDetailsResponse:
      required:
        - TransactionId
      type: object
      properties:
        Warnings:
          type: array
          description: Container for warning codes
          items:
            $ref: '#/components/schemas/Warning'
        TransactionId:
          type: string
          description: A unique identifier for this transaction.
          example: 1111111-2222-3333-4444-55555555555
        CarDetails:
          $ref: '#/components/schemas/CarDetails'
        ValidFormsOfPayment:
          type: array
          description: List of all the forms of payment that will be accepted for the booking of this rental transaction.
          items:
            $ref: '#/components/schemas/ValidFormsOfPayment'
        Links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Link'
          description: 'A map of links to other Car APIs. possible link name: ApiBooking'
          xml:
            wrapped: true
      xml:
        name: CarDetailsResponse
    CarPolicy:
      required:
        - CategoryCode
      type: object
      properties:
        CategoryCode:
          type: string
          description: 'The category that this policy applies to (e.g. cancellation, drivers license requirements, driver age requirements) '
          example: Guarantee
        PolicyText:
          type: string
          description: 'The raw text of the policy.This is generally localized into the requested language, but may be English if no other translations are available.'
          example: Credit card required.
      description: A list of policies that apply to this car rental.
    Duration:
      required:
        - Count
        - Unit
      type: object
      properties:
        Unit:
          type: string
          description: The unit for minimum amount of time for a rental.
          example: Day
        Count:
          type: integer
          description: The minimum number of units that qualify for minimum amount of time for a rental.
          format: int64
          example: 1
      description: The maximum amount of time for a rental that still qualifies for this rate.This may or may not be the same as the current rental duration.
    Equipment:
      required:
        - Code
        - Name
      type: object
      properties:
        Code:
          type: string
          description: Special equipment code
          example: BabyChildSeat
        Name:
          type: string
          description: Special equipment name
          example: Baby Child Seat
        RatePeriod:
          type: string
          description: 'Unit indicating the price of special equipment. Support value:Trip,Daily'
          example: Trip
        Price:
          $ref: '#/components/schemas/Money'
      description: Description and costs of any optional special equipment that may be rented with the car.
    ExtraFees:
      required:
        - Amount
        - Unit
        - UnitCount
      type: object
      properties:
        Unit:
          type: string
          description: 'Rate period beyond the base rate. Supported values: ExtraHourly, ExtraDaily'
          example: ExtraHourly
        UnitCount:
          type: integer
          description: Numbers of period
          format: int64
          example: 2
        Amount:
          $ref: '#/components/schemas/Money'
      description: List of ExtraFeesDetails
    RentalLimits:
      required:
        - MaxDuration
        - MinDuration
      type: object
      properties:
        MinDuration:
          $ref: '#/components/schemas/Duration'
        MaxDuration:
          $ref: '#/components/schemas/Duration'
      description: Limitations that are part of this rental agreement.
    TaxesAndFees:
      required:
        - Amount
        - Description
      type: object
      properties:
        Description:
          type: string
          description: TaxesAndFees description
          example: "Rental, CONSOLIDATED FACILITY CHG 4.00/DAY\t"
        Amount:
          $ref: '#/components/schemas/Money'
      description: List of TaxesAndFees Details
    ValidFormsOfPayment:
      required:
        - BrandName
        - PaymentMethod
        - PaymentSubMethod
      type: object
      properties:
        PaymentMethod:
          type: string
          description: Method of payment
          example: CreditCard
        PaymentSubMethod:
          type: string
          description: Sub method of payment
          example: American Express
        BrandName:
          type: string
          description: 'The brand name of the payment sub-method to be displayed to the customer. In many cases it will be the same as the payment sub-method, but "Visa/Carte Bleue" and "Visa/Delta are some of the exceptions.'
          example: American Express
      description: List of all the forms of payment that will be accepted for the booking of this rental transaction.
    APIMError:
      title: APIMError
      properties:
        message:
          type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
