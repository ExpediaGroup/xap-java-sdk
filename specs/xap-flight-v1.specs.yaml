openapi: 3.0.1
info:
  title: EWSAir V1 APIs
  description: OpenAPI Spec for EWS Air V1 APIs
  version: v1
  x-eg-lifecycle: LIVE
  x-eg-tags: ["EWS", "Flights", "Flight FareRules", "Flight BaggageFee"]
servers:
  - url: 'https://apim.expedia.com'
    description: Production Server
tags:
  - name: Flight FareRules
  - name: Flight BaggageFee
paths:
  /flights/baggagefees/{offerToken}:
    get:
      tags:
        - Flight BaggageFee
      description: request for baggage fee information
      operationId: get-flight-bagaggefee
      parameters:
        - name: offerToken
          in: path
          description: The offerToken from the Flight Listings API
          required: true
          schema:
            type: string
          example: ClsKAkFBGhcyMDIxLTA0LTIxVDE0OjU1OjAwLjAwMCIDU0VBKhcyMDIxLTA0LTIxVDE3OjUxOjAwLjAwMDIDUEhYOgFOQghOVkFIWlNONUoHRUNPTk9NWVIDNzEwClwKAkFBGhcyMDIxLTA0LTIxVDIxOjQxOjAwLjAwMCIDUEhYKhcyMDIxLTA0LTIxVDIyOjUwOjAwLjAwMDIDTEFTOgFOQghOVkFIWlNONUoHRUNPTk9NWVIEMjEwNhIDVVNEGgJLRw
        - name: locale
          in: query
          description: |-
            Locale information to provide airline name.
            If this information is not provided, the locale corresponding for that partners default will be selected.
          schema:
            type: string
          example: en_US
        - name: currency
          in: query
          description: |-
            Specifies currency code for baggage fees to be returned in. Format should be ISO 4217 currency code (3 letter).
            If this information is not provided, the currency corresponding for that partners default will be selected.
          schema:
            type: string
          example: USD
        - name: Key
          in: header
          description: |-
            Unique identifier assigned to partner.
            Required for all requests.
            Obtained from Expedia Account Manager or representative.
          required: true
          schema:
            type: string
          example: X99X9X9-99XX-9XX9-X999-99XX99X9X999X
        - name: Partner-Transaction-ID
          in: header
          description: Partner-generated identifier.
          required: true
          schema:
            type: string
          example: 123456-798101112
        - name: Accept
          in: header
          description: Accept header for the request.
          required: true
          schema:
            type: string
          example: application/vnd.exp-flight.v1+json
        - name: Accept-Encoding
          in: header
          description: Accept encoding for the request.
          required: false
          schema:
            type: string
          example: gzip
      responses:
        '400':
          description: |
            The locale provided in the request is not supported by API(INVALID_LOCALE).
            The accept header provided is not as per the documentation(INVALID_ACCEPT_HEADER).
          content:
            application/vnd.exp-flight.v1+json:
              schema:
                $ref: '#/components/schemas/Errors'
              example:
                Errors:
                  - Code: INVALID_ACCEPT_HEADER
                    Description: Please provide a valid Accept header
                TransactionId: c38d0183-5c90-4db6-8c5e-31b7294cd06f
        '200':
          description: "Baggage fee information returned successfully (this can also\
            \ include Warnings in some cases).Possible warning codes are \nNO_RESULTS_FOUND\n\
            NO_FEE_INFO\n"
          content:
            application/vnd.exp-flight.v1+json:
              schema:
                $ref: '#/components/schemas/FlightBaggageFeesResponse'
              example:
                FlightBaggageFees:
                  - FlightSegment:
                      AirlineCode: AA
                      AirlineName: American Airlines
                      DepartureAirport:
                        Code: SEA
                      ArrivalAirport:
                        Code: LAS
                      Links:
                        WebBaggageFees:
                          Method: GET
                          Href: https://www.aa.com/i18n/travelInformation/baggage/baggageAllowance.jsp
                    BaggageFees:
                      - BagType: FIRST_BAG
                        WeightUnit: kg
                        Weight: "23"
                        Application: upto
                        FixedCharge:
                          Value: "30.0"
                          Currency: USD
                      - BagType: SECOND_BAG
                        WeightUnit: kg
                        Weight: "23"
                        Application: upto
                        FixedCharge:
                          Value: "40.0"
                          Currency: USD
                      - BagType: CARRY_ON
                        FixedCharge:
                          Value: "0.0"
                          Currency: USD
                      - BagType: PREPAID_CARRY_ON
                        FixedCharge:
                          Value: "0.0"
                          Currency: USD
                TransactionId: 6e3c782e-54e4-4f48-a909-d4f2e4fd31c4
        '500':
          description: |
            Server side error like backend service has some issues or some issues in EWS Air service. The Error code is SERVER_ERROR
          content:
            application/vnd.exp-flight.v1+json:
              schema:
                $ref: '#/components/schemas/Errors'
              example:
                Errors:
                  - Code: SERVER_ERROR
                    Description: An error has occurred while processing the request
                TransactionId: 68bce810-5af7-40c1-bea7-07a823b6f1f0
        '404':
          description: No Route matched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                no Route matched:
                  value: |-
                    {
                        "message": "no Route matched with those values"
                    }
        '429':
          description: API rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                API rate limit exceeded:
                  value: |-
                    {
                        "message": "API rate limit exceeded"
                    }
        '401':
          description: Unauthorized or Invalid authentication credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                unauthorized:
                  value: |-
                    {
                        "message": "Unauthorized"
                    }
                Invalid authentication credentials:
                  value: |-
                    {
                        "message": "Invalid authentication credentials"
                    }
        '403':
          description: cannot consume this service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                cannot consume this service:
                  value: |-
                    {
                        "message": "You cannot consume this service"
                    }
        '503':
          description: name resolution failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                name resolution failed:
                  value: |-
                    {
                        "message": "name resolution failed"
                    }
        '504':
          description: upstream server is timing out
          content:
            text/plain:
              examples:
                upstream server is timing out:
                  value: The upstream server is timing out
      security:
        - basicSchema: []
  /flights/farerules/{offerToken}:
    get:
      tags:
        - Flight FareRules
      description: request for farerule information
      operationId: get-flight-farerules
      parameters:
        - name: offerToken
          in: path
          description: An offerToken from a Flight API responses.
          required: true
          schema:
            type: string
          example: 599be702-d354-4065-bd52-348af7c728d2
        - name: locale
          in: query
          description: |-
            locale information
            (Even though locale may be requested, the majority of the information in the response comes directly from the GDS systems and does NOT have any localization to languages other than English)
          schema:
            type: string
          example: en_US
        - name: Source
          in: header
          description: |-
            Accepts any single-word value that describes the source from which the API is being called.
            Example: 'Details', 'Book', 'Itin', etc.
          schema:
            type: string
          example: Details
        - name: Key
          in: header
          description: |-
            Unique identifier assigned to partner.
            Required for all requests.
            Obtained from Expedia Account Manager or representative.
          required: true
          schema:
            type: string
          example: X99X9X9-99XX-9XX9-X999-99XX99X9X999X
        - name: Partner-Transaction-ID
          in: header
          description: Partner-generated identifier.
          required: true
          schema:
            type: string
          example: 123456-798101112
        - name: Accept
          in: header
          description: Accept header for the request.
          required: true
          schema:
            type: string
          example: application/vnd.exp-flight.v1+json
        - name: Accept-Encoding
          in: header
          description: Accept encoding for the request.
          required: false
          schema:
            type: string
          example: gzip
      responses:
        '400':
          description: |
            Bad request from client.Possible error codes are:
            INVALID_ACCEPT_HEADER
            INVALID_FARE_RULES_KEY
          content:
            application/vnd.exp-flight.v1+json:
              schema:
                $ref: '#/components/schemas/Errors'
              example:
                Errors:
                  - Code: INVALID_ACCEPT_HEADER
                    Description: Please provide a valid Accept header
                TransactionId: aedfd328-797a-43c9-9584-e901ea1f589d
        '500':
          description: |
            Server side error like backend service has some issues or some issues in EWS Air service.Possible error codes are:
            SERVER_ERROR
            NO_FARE_RULES_FOUND
          content:
            application/vnd.exp-flight.v1+json:
              schema:
                $ref: '#/components/schemas/Errors'
              example:
                Errors:
                  - Code: SERVER_ERROR
                    Description: An error has occurred while processing the request
                TransactionId: 68bce810-5af7-40c1-bea7-07a823b6f1f0
        '200':
          description: |
            FareRules information returned successfully (in some cases this can have warnings).
             Warning messages are:
            NO_FARE_RULES_FOUND
          content:
            application/vnd.exp-flight.v1+json:
              schema:
                $ref: '#/components/schemas/FlightFareRulesResponse'
              example:
                FlightFareRule:
                  - FlightSegment:
                      AirlineCode: AA
                      DepartureAirport:
                        Code: LAS
                      ArrivalAirport:
                        Code: LAX
                      FareRules:
                        - FareBasisCode: OUALZNN3
                          Rules:
                            - Category: RULE APPLICATION AND OTHER CONDITIONS
                              Description: |
                                NOTE - THE FOLLOWING TEXT IS INFORMATIONAL AND NOT VALIDATED FOR AUTOPRICING.
                                NORMAL/EXCURSION FARES
                                APPLICATION
                                 CLASS OF SERVICE
                                  THESE FARES APPLY FOR FIRST/BUSINESS/ECONOMY/PREMIUM ECONOMY CLASS SERVICE.
                                 CAPACITY LIMITATIONS
                                  SEATS ARE LIMITED.
                            - Category: ELIGIBILITY
                              Description: |
                                NO ELIGIBILITY REQUIREMENTS APPLY.
                            - Category: DAY/TIME
                              Description: |
                                NO DAY/TIME TRAVEL RESTRICTIONS APPLY.
                            - Category: SEASONALITY
                              Description: |
                                NO SEASONAL TRAVEL RESTRICTIONS APPLY.
                            - Category: FLIGHT APPLICATION
                              Description: |
                                THE FARE COMPONENT MUST NOT BE ON ONE OR MORE OF THE FOLLOWING
                                  ANY AA FLIGHT OPERATED BY AS.
                                AND
                                THE FARE COMPONENT MUST BE ON ONE OR MORE OF THE FOLLOWING
                                  ANY AA FLIGHT.
                TransactionId: 68bce810-5af7-40c1-bea7-07a823b6f1f0
        '404':
          description: No Route matched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                no Route matched:
                  value: |-
                    {
                        "message": "no Route matched with those values"
                    }
        '429':
          description: API rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                API rate limit exceeded:
                  value: |-
                    {
                        "message": "API rate limit exceeded"
                    }
        '401':
          description: Unauthorized or Invalid authentication credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                unauthorized:
                  value: |-
                    {
                        "message": "Unauthorized"
                    }
                Invalid authentication credentials:
                  value: |-
                    {
                        "message": "Invalid authentication credentials"
                    }
        '403':
          description: cannot consume this service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                cannot consume this service:
                  value: |-
                    {
                        "message": "You cannot consume this service"
                    }
        '503':
          description: name resolution failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMError'
              examples:
                name resolution failed:
                  value: |-
                    {
                        "message": "name resolution failed"
                    }
        '504':
          description: upstream server is timing out
          content:
            text/plain:
              examples:
                upstream server is timing out:
                  value: The upstream server is timing out
      security:
        - basicSchema: []
components:
  schemas:
    Error:
      required:
        - Code
        - Description
      type: object
      properties:
        Code:
          type: string
          description: Error code describing the issue
          example: AMBIGUOUS_LOCATION
        Description:
          type: string
          description: A simple description of what the error is.
          example: 'Multiple pickup locations found. '
      description: Container for error list.
    Errors:
      required:
        - Errors
        - TransactionId
      type: object
      properties:
        Errors:
          type: array
          description: Container for error list.
          items:
            $ref: '#/components/schemas/Error'
        TransactionId:
          type: string
          description: A unique identifier for the transaction.
          example: a9e371c4-89d9-4f9c-8df7-df105830e7fe
      xml:
        name: ErrorResponse
    Airport:
      required:
        - Code
      type: object
      properties:
        Code:
          type: string
          description: Three-letter IATA airport code for departure location
          example: SFO
        Name:
          type: string
          description: Name of departure airport
          example: San Francisco International Airport
        City:
          type: string
          description: City where departure airport resides
          example: San Francisco
        Province:
          type: string
          description: Province or State where departure airport resides
          example: CA
        Country:
          type: string
          description: Country where departure airport resides
          example: USA
      description: Container for arrival airport details.
      xml:
        name: Airport
    BaggageFee:
      required:
        - BagType
      type: object
      properties:
        BagType:
          type: string
          description: Specifies the type of baggage.
          example: FIRST_BAG
          enum:
            - PREPAID_CARRY_ON
            - PREPAID_FIRST_BAG
            - PREPAID_SECOND_BAG
            - CARRY_ON
            - FIRST_BAG
            - SECOND_BAG
        WeightUnit:
          type: string
          description: Specifies weight unit for this bagType. This will always be kilograms.
          example: kg
        Weight:
          type: string
          description: Weight of the bag.
          example: "23"
        Application:
          type: string
          description: This element specifies descriptive text useful in displaying baggage fees.
          example: per
          enum:
            - upto
            - per
        FixedCharge:
          $ref: '#/components/schemas/Fee'
        MaxCharge:
          $ref: '#/components/schemas/Fee'
        MinCharge:
          $ref: '#/components/schemas/Fee'
      description: |-
        Container for baggage fee information of each bag type.
        The baggage fee can vary for each bag type. The amount can be zero, fixed amount or will be in a range
      xml:
        name: BaggageFees
    Fee:
      required:
        - Currency
        - Value
      type: object
      properties:
        Value:
          type: string
          description: The value of the element being defined.
          example: "21.9"
        Currency:
          type: string
          description: The ISO 4217 Currency Code that the value is expressed in.
          example: USD
        LocalCurrencyPrice:
          $ref: '#/components/schemas/Money'
        Name:
          type: string
      description: This is used when a fee range is returned. It specifies the highest value of bag fee.
    FlightBaggageFee:
      required:
        - BaggageFees
        - FlightSegment
      type: object
      properties:
        FlightSegment:
          $ref: '#/components/schemas/BaggageFeeFlightSegment'
        BaggageFees:
          type: array
          description: |-
            Container for baggage fee information of each bag type.
            The baggage fee can vary for each bag type. The amount can be zero, fixed amount or will be in a range
          items:
            $ref: '#/components/schemas/BaggageFee'
      description: Container for information on Baggage fee information of each Segment.
      xml:
        name: FlightBaggageFees
    FlightBaggageFeesResponse:
      required:
        - FlightBaggageFees
        - TransactionId
      type: object
      properties:
        Warnings:
          type: array
          description: Container for Warning messages.
          items:
            $ref: '#/components/schemas/Warning'
        FlightBaggageFees:
          type: array
          description: Container for information on Baggage fee information of each Segment.
          items:
            $ref: '#/components/schemas/FlightBaggageFee'
        TransactionId:
          type: string
          description: Unique identifier for the transaction.
          example: f06edfa3-27f4-44e6-838c-b8dd3d0a3210
      xml:
        name: FlightBaggageFeesResponse
    FareRule:
      required:
        - FareBasisCode
        - Rules
      type: object
      properties:
        FareBasisCode:
          type: string
          description: Fare Basis Code to which the rules are applied.
          example: W7EB
        Rules:
          type: array
          description: Container for fare rules.
          items:
            $ref: '#/components/schemas/Rule'
      description: Contains the list of fare rule details
    Rule:
      required:
        - Category
        - Description
      type: object
      properties:
        Category:
          type: string
          description: Category name of the rule.
          example: ELIGIBILITY
        Description:
          type: string
          description: Rule description.
          example: NO ELIGIBILITY REQUIREMENTS APPLY
      description: Container for fare rules.
    FlightFareRuleItem:
      required:
        - FlightSegment
      type: object
      properties:
        FlightSegment:
          required:
            - AirlineCode
            - ArrivalAirport
            - DepartureAirport
          type: object
          properties:
            AirlineCode:
              type: string
              description: Specifies the 2 letter IATA airline code of the Most Significant Carrier for the flight. In the case of flights with multiple airlines involves this is the airline who will be charging for the baggage.
              example: VX
            DepartureAirport:
              $ref: '#/components/schemas/Airport'
            ArrivalAirport:
              $ref: '#/components/schemas/Airport'
            Links:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/Link'
              description: Contains the deeplink URLs of api services and websites
              xml:
                wrapped: true
            FareRules:
              type: array
              description: Contains the list of fare rule details
              xml:
                wrapped: true
              items:
                $ref: '#/components/schemas/FareRule'
          description: Container for flight segment information.
      description: Container for segment and corresponding fare rules.
      xml:
        name: FlightFareRules
    FlightFareRulesResponse:
      required:
        - FlightFareRule
        - TransactionId
      type: object
      properties:
        FlightFareRule:
          type: array
          description: Container for segment and corresponding fare rules.
          items:
            $ref: '#/components/schemas/FlightFareRuleItem'
        TransactionId:
          type: string
          description: Unique identifier for the transaction.
          example: f06edfa3-27f4-44e6-838c-b8dd3d0a3210
    BaggageFeeFlightSegment:
      required:
        - AirlineCode
        - ArrivalAirport
        - DepartureAirport
      type: object
      properties:
        AirlineCode:
          type: string
          description: Specifies the 2 letter IATA airline code of the most significant carrier for the flight. In the case of flights with multiple airlines involves this is the airline who will be charging for the baggage.
          example: VX
        AirlineName:
          type: string
          description: Specifies the name of the airline. Where possible this is localized to the LangID supplied in the request.
          example: Virgin America
        DepartureAirport:
          $ref: '#/components/schemas/Airport'
        ArrivalAirport:
          $ref: '#/components/schemas/Airport'
        CabinClass:
          type: string
          description: Cabin class name of airline.
          example: Economy
        Links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Link'
          description: |-
            Links to airline's baggage policies.
            Where possible this is localized to the LangID supplied in the request.
            It is possible that special characters will be present in the URL
          xml:
            wrapped: true
      description: Container for information of Segment.
      xml:
        name: FlightSegment
    Link:
      required:
        - Href
        - Method
      type: object
      properties:
        Accept:
          type: string
          description: Accept header.
        Method:
          type: string
          description: HTTP method to connect.
          example: GET
        Href:
          type: string
          description: HATEOAS URL to fetch details.
      description: Contains the deeplink URLs of api services and websites
    Money:
      required:
        - Currency
        - Value
      type: object
      properties:
        Value:
          type: string
          description: The value of the element being defined.
          example: "21.9"
        Currency:
          type: string
          description: The ISO 4217 Currency Code that the value is expressed in.
          example: USD
      description: Container for showing price.
    Warning:
      required:
        - Code
        - Description
      type: object
      properties:
        Code:
          type: string
          description: Standardized warning code.
          example: NO_FEE_INFO
        Description:
          type: string
          description: Standardized warning description message.
          example: Fee Information is not available.
      description: Container for Warning messages.
    APIMError:
      title: APIMError
      properties:
        message:
          type: string
  securitySchemes:
    basicSchema:
      type: http
      scheme: basic
