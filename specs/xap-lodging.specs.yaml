openapi: 3.0.1
info:
  title: EWSHotel API
  description: |
    The XAP Lodging Search APIs can be used by partners both booking via an Expedia website, or by partners that
    will be booking via the XAP APIs. Each API also provides pre-configured links to the Expedia website,
    the XAP Booking API, or both.
  contact:
    name: PartnerAPIs
    url: https://confluence.expedia.biz/display/EWS/EWSHotel
    email: dreamweaver@expedia.com
  version: v3
  x-eg-lifecycle: LIVE
  x-eg-tags: ["Partner", "EWS", "XAP", "EWSHotel", "Hotel", "Lodging", "LodgingQuotes","LodgingAvailabilityCalendar"]
tags:
  - name: Lodging Quotes
  - name: Lodging Availability Calendars
servers:
  - url: 'https://apim.expedia.com'
    description: Production Server
paths:
  /lodging/quotes:
    get:
      tags:
        - Lodging Quotes
      summary: Get properties price and availability information
      description: |
        The Lodging Quotes API will return the price and availability information for given Expedia lodging property ID(s).
      operationId: get-lodging-quotes
      parameters:
        - name: Key
          in: header
          description: |
            The partner API key is a case-sensitive, alphanumeric string that looks something like this:
            
            **X99X9X9-99XX-9XX9-X999-99XX99X9X999X**
            
            The API Key is assigned and configured as part of the API on-boarding process.
            It will be sent to the partner by their Expedia Account Manager or representative.
          required: true
          schema:
            type: string
        - name: Partner-Transaction-Id
          in: header
          description: |
            The `Partner-Transaction-ID` is a required API request header element that is <u>not</u> consumed
            by Expedia. It will be required in all XAP v3 API request headers and will be mirrored
            back to the partner in the corresponding API response header.
            
            The `Partner-Transaction-ID` may be any alphanumeric string of the partner's choosing.
          required: true
          schema:
            type: string
            example: Partner123
        - name: propertyIds
          in: query
          description: |
            Comma-separated list of Expedia Property IDs.

            ***NOTE**: This API supports Expedia property IDs <u>only</u> by design â€“ HCOM and Vrbo property IDs are 
            <u>not</u> supported.*

            *For optimal performance, limiting your request to a maximum of 200 properties is recommended.*
          explode: false
          schema:
            type: array
            items:
              type: string
            uniqueItems: true
        - name: checkIn
          in: query
          description: |
            Check-in date for property stay in an ISO 8601 Date format.

            This parameter should be used in combination with the checkOut parameter.

            The maximum advanced search window is 1000 days in the future, and the maximum length of stay is 732.
          schema:
            type: string
            format: date
            example: '2023-10-12'
        - name: checkOut
          in: query
          description: |
            Check-out date for property stay in an ISO 8601 Date format

            This parameter should be used in combination with the checkIn parameter.

            The maximum advanced search window is 1000 days in the future, and the maximum length of stay is 732.
          schema:
            type: string
            format: date
            example: '2023-10-14'
        - name: currency
          in: query
          description: |
            The requested currency expressed according to ISO 4217.

            PoS default currency will be passed if another currency is not specified in the request.
          schema:
            type: string
        - name: links
          in: query
          description: |
            Comma-separated list to specify the types of deep links.
            - WD (link to web infosite)
            - WS (link to web search result page)
            - WEB (include all website links)
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - WD
                - WS
                - WEB
        - name: travelWithPets
          in: query
          description: |
            Indicates if the search should include pet-friendly properties.
            
            If set to "True" only properties that allow pets are returned. Pet fees, if available, are included in TaxesAndFees.
            
            The parameter is only applicable to the Vrbo brand.
          schema:
            type: boolean
            default: false
        - name: room1.adults
          in: query
          description: |
            Specifies the number of adults staying in a specific room.

            Example: `room1.adults` is used to specify the number of adults in the first room.
            
            ***NOTE***: multiple room request is only supported for conventional lodging hotels. Request for Vrbo 
            properties should only include one room. e.g. 3 adults in room 1 and 3 in room 2, "room1.adults" is 6.
          schema:
            type: integer
            format: int64
          example: 2
        - name: room1.childAges
          in: query
          description: |
            Comma-separated list that specifies the age(s) for each of the children in each of the rooms.

            Example: `room2.childAges=1,3` means two children (1-year old and 3-year old) are staying in room #2.

            Children must be accompanied by an adult.

            Total number of children is indicated by the number of childAges included.

            If there are no children in the party then this value should not be included.
            
            ***NOTE***: multiple room request is only supported for conventional lodging hotels. Request for Vrbo
            properties should include the ages of all the children in the first room. e.g. 1 child age 10 in room #1
            and 1 child age 11 in room #2, "room1.childAges" is 10,11.
          explode: false
          schema:
            type: array
            items:
              type: string
          example:
            - 8
            - 10
        - name: room2.adults
          in: query
          description: Specifies the number of adults staying in second room.
          schema:
            type: integer
            format: int64
        - name: room2.childAges
          in: query
          description: Comma-separated list that specifies the age(s) for each of the
            children in second room.
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: room3.adults
          in: query
          description: Specifies the number of adults staying in third room.
          schema:
            type: integer
            format: int64
        - name: room3.childAges
          in: query
          description: Comma-separated list that specifies the age(s) for each of the
            children in third room.
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: room4.adults
          in: query
          description: Specifies the number of adults staying in fourth room.
          schema:
            type: integer
            format: int64
        - name: room4.childAges
          in: query
          description: Comma-separated list that specifies the age(s) for each of the
            children in fourth room.
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: room5.adults
          in: query
          description: Specifies the number of adults staying in fifth room.
          schema:
            type: integer
            format: int64
        - name: room5.childAges
          in: query
          description: Comma-separated list that specifies the age(s) for each of the
            children in fifth room.
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: room6.adults
          in: query
          description: Specifies the number of adults staying in sixth room.
          schema:
            type: integer
            format: int64
        - name: room6.childAges
          in: query
          description: Comma-separated list that specifies the age(s) for each of the
            children in sixth room.
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: room7.adults
          in: query
          description: Specifies the number of adults staying in seventh room.
          schema:
            type: integer
            format: int64
        - name: room7.childAges
          in: query
          description: Comma-separated list that specifies the age(s) for each of the
            children in seventh room.
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: room8.adults
          in: query
          description: Specifies the number of adults staying in eighth room.
          schema:
            type: integer
            format: int64
        - name: room8.childAges
          in: query
          description: Comma-separated list that specifies the age(s) for each of the
            children in eighth room.
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Normal Response
          content:
            application/vnd.exp-lodging.v3+json:
              schema:
                $ref: '#/components/schemas/LodgingQuotesResponse'
              examples:
                Lodging Quotes Response:
                  value: |-
                    {
                      "Count": 1,
                      "TotalPropertyCount": 1,
                      "TransactionId": "0e1d7193-2289-481c-bdf9-b7ac0b0b3bfe",
                      "StayDates": {
                        "CheckInDate": "2024-11-29",
                        "CheckOutDate": "2024-12-04"
                      },
                      "LengthOfStay": 5,
                      "Occupants": [
                        {
                          "Adults": 2
                        }
                      ],
                      "Properties": [
                        {
                          "Id": "87704892",
                          "Status": "AVAILABLE",
                          "RoomTypes": [
                            {
                              "RatePlans": [
                                {
                                  "CancellationPolicy": {
                                    "Refundable": true,
                                    "FreeCancellation": true,
                                    "FreeCancellationEndDateTime": "2024-11-15T23:59:00-08:00",
                                    "CancellationPenaltyRules": [
                                      {
                                        "PenaltyPercentOfStay": "50.00",
                                        "PenaltyStartDateTime": "2024-11-15T23:59:00-08:00",
                                        "PenaltyEndDateTime": "2024-11-22T23:59:00-08:00"
                                      },
                                      {
                                        "PenaltyPercentOfStay": "100",
                                        "PenaltyStartDateTime": "2024-11-22T23:59:00-08:00",
                                        "PenaltyEndDateTime": "2024-11-29T00:00:00-08:00"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "Price": {
                                "BaseRate": {
                                  "Value": "790.00",
                                  "Currency": "USD"
                                },
                                "TaxesAndFees": {
                                  "Value": "348.48",
                                  "Currency": "USD"
                                },
                                "TotalPrice": {
                                  "Value": "1138.48",
                                  "Currency": "USD"
                                },
                                "AvgNightlyRate": {
                                  "Value": "158.00",
                                  "Currency": "USD"
                                },
                                "AvgNightlyRateWithFees": {
                                  "Value": "198.80",
                                  "Currency": "USD"
                                },
                                "TotalPriceWithPropertyFees": {
                                  "Value": "1138.48",
                                  "Currency": "USD"
                                }
                              },
                              "Links": {
                                "WebSearchResult": {
                                  "Method": "GET",
                                  "Href": "https://www.vrbo.com/search?selected=87704892&startDate=2024-11-29&endDate=2024-12-04&adults=2&tpid=9001&eapid=1&mpa=790.00&mpb=348.48&mpd=USD&mctc=15"
                                },
                                "WebDetails": {
                                  "Method": "GET",
                                  "Href": "https://www.vrbo.com/3032772?adults=2&startDate=2024-11-29&endDate=2024-12-04&mpa=790.00&mpb=348.48&mpd=USD&mpe=1721730597"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
        "400":
          description: User Fault
          content:
            application/vnd.exp-lodging.v3+json:
              schema:
                $ref: '#/components/schemas/Errors'
              example:
                Errors:
                  - Code: INVALID_PROPERTYID
                    Description: The PropertyIds is invalid. Which should be comma separated list of property IDs.
                TransactionId: 97da7aa5-175e-4fdf-8bbd-32e997b6faa8
        "500":
          description: Service Error
          content:
            application/vnd.exp-lodging.v3+json:
              schema:
                $ref: '#/components/schemas/Errors'
              example:
                Errors:
                  - Code: APPLICATION_ERROR
                    Description: Application error.
                TransactionId: b2f16375-9fe3-43e3-b524-fb5e0498460b
        "401":
          description: Invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIGatewayError'
              example:
                message: Unauthorized
        "403":
          description: You cannot consume this service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIGatewayError'
              example:
                message: You cannot consume this service
        "429":
          description: API rate limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIGatewayError'
              example:
                message: API rate limit exceeded.
        "503":
          description: Service unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIGatewayError'
              example:
                message: Name resolution failed.
        "504":
          description: API time out.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIGatewayError'
              example:
                message: The upstream server is timing out.
      security:
        - Authorization: []
  /lodging/availabilityCalendars:
    get:
      tags:
        - Lodging Availability Calendars
      summary: Get availability calendars of properties
      description: "Returns the availability of each day for a range of dates for given Expedia lodging properties."
      operationId: get-lodging-availability-calendars
      parameters:
        - name: Key
          in: header
          description: |
            The partner API key is a case-sensitive, alphanumeric string that looks something like this:
            
            **X99X9X9-99XX-9XX9-X999-99XX99X9X999X**
            
            The API Key is assigned and configured as part of the API on-boarding process.
            It will be sent to the partner by their Expedia Account Manager or representative.
          required: true
          schema:
            type: string
        - name: Partner-Transaction-Id
          in: header
          description: |
            The `Partner-Transaction-ID` is a required API request header element that is <u>not</u> consumed
            by Expedia. It will be required in all XAP v3 API request headers and will be mirrored
            back to the partner in the corresponding API response header.
            
            The `Partner-Transaction-ID` may be any alphanumeric string of the partner's choosing.
          required: true
          schema:
            type: string
            example: Partner123
        - name: propertyIds
          in: query
          description: |
            Comma-separated list of Expedia Property IDs.

            The API request supports a maximum of 50 Property IDs in a single request.
          explode: false
          schema:
            type: array
            items:
              type: string
            uniqueItems: true
      responses:
        "200":
          description: Normal Response
          content:
            application/vnd.exp-lodging.v3+json:
              schema:
                $ref: '#/components/schemas/AvailabilityCalendarResponse'
        "400":
          description: User Fault
          content:
            application/vnd.exp-lodging.v3+json:
              schema:
                $ref: '#/components/schemas/Errors'
              example:
                Errors:
                  - Code: INVALID_PROPERTYIDS
                    Description: The propertyIds is invalid. Which should be comma separated list of Expedia property IDs.
                TransactionId: 97da7aa5-175e-4fdf-8bbd-32e997b6faa8
        "500":
          description: Service Error
          content:
            application/vnd.exp-lodging.v3+json:
              schema:
                $ref: '#/components/schemas/Errors'
              example:
                Errors:
                  - Code: APPLICATION_ERROR
                    Description: Application error.
                TransactionId: b2f16375-9fe3-43e3-b524-fb5e0498460b
        "401":
          description: Unauthorized or Invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIGatewayError'
              example:
                message: Unauthorized
        "403":
          description: cannot consume this service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIGatewayError'
              example:
                message: You cannot consume this service
        "429":
          description: API rate limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIGatewayError'
              example:
                message: API rate limit exceeded.
        "503":
          description: Service unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIGatewayError'
              example:
                message: Name resolution failed.
        "504":
          description: API time out.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIGatewayError'
              example:
                message: The upstream server is timing out.
      security:
        - Authorization: []
components:
  schemas:
    CancellationPenaltyRule:
      type: object
      properties:
        PenaltyPercentOfStay:
          type: string
          description: |
            Specifies the per-stay cancellation fee charged as a percentage of the total rate, in addition to any other
            penalties listed.
          example: "100"
        PenaltyStartDateTime:
          type: string
          description: |
            The beginning of the window of time when the `CancellationPenaltyRule` is in effect.

            The date and time are expressed in ISO 8601 International Date format, and local to the property.
          format: date-time
          example: 2022-07-23T15:00:00-08:00
        PenaltyEndDateTime:
          type: string
          description: |
            The end of the window of time when the `CancellationPenaltyRule` is in effect.

            The date and time are expressed in ISO 8601 International Date format, and local to the property.
          format: date-time
          example: 2022-07-25T15:00:00-08:00
      description: Container for cancellation penalty details.
    CancellationPolicy:
      type: object
      properties:
        Refundable:
          type: boolean
          description: Indicate whether the rate is refundable or not.
          example: true
        FreeCancellation:
          type: boolean
          description: Indicate whether the room can be cancelled free of charge.
          example: true
        FreeCancellationEndDateTime:
          type: string
          description: The date and time until which the room can be cancelled free of charge.
          format: date-time
        CancellationPenaltyRules:
          type: array
          description: Container for Cancellation Penalty Rules information.
          items:
            $ref: '#/components/schemas/CancellationPenaltyRule'
      description: Container for Cancellation Policy information.
    Property:
      type: object
      properties:
        Id:
          type: string
          description: The unique property identifier used to designate a single property.
          example: "14747"
        Status:
          type: string
          description: Represents whether the offer is currently available.
          example: AVAILABLE
          enum:
            - AVAILABLE
            - NOT_AVAILABLE
            - ERROR
            - NUMBER_OF_ADULTS_NOT_ACCEPTED
            - NUMBER_OF_CHILDREN_NOT_ACCEPTED
            - NUMBER_OF_INFANTS_NOT_ACCEPTED
            - NUMBER_OF_PERSONS_NOT_ACCEPTED
            - CHECK_IN_AGE_NOT_ACCEPTED
        RoomTypes:
          type: array
          description: Container for all of available room types.
          items:
            $ref: '#/components/schemas/RoomType'
      description: Container for information on each offered hotel.
    Link:
      type: object
      properties:
        Accept:
          type: string
          description: |
            The Accept request header for API queries only.

            Note: this value will only be returned if the link is an API query, as website URLs do not require an
            `Accept` header.
        Method:
          type: string
          description: Method of request.
          example: GET
        Href:
          type: string
          description: The URL of the destination web page or API query.
    Money:
      type: object
      properties:
        Value:
          type: string
          description: The value of the element being defined.
          example: "21.9"
        Currency:
          type: string
          description: The ISO 4217 Currency Code that the value is expressed in.
          example: USD
      description: Pricing information of the stat date
    Occupant:
      type: object
      properties:
        Adults:
          type: integer
          description: The number of adults in a room.
          format: int32
          example: 1
        ChildAges:
          type: array
          description: The ages of children in a room.
          example:
            - 2
            - 3
            - 5
          items:
            type: integer
            format: int32
    Promotion:
      type: object
      properties:
        Description:
          type: string
          description: The description of the promotion.
          example: 20%Off
        Amount:
          $ref: '#/components/schemas/Money'
    RatePlan:
      type: object
      properties:
        CancellationPolicy:
          $ref: '#/components/schemas/CancellationPolicy'
        Promotions:
          type: array
          description: All promotion information of the ratePlan.
          items:
            $ref: '#/components/schemas/Promotion'
      description: Container for rate plan information.
    RoomType:
      type: object
      properties:
        RatePlans:
          type: array
          description: Container for rate plan information.
          items:
            $ref: '#/components/schemas/RatePlan'
        Price:
          type: object
          properties:
            BaseRate:
              allOf:
                - $ref: '#/components/schemas/Money'
              description: The price of the rate plan for all occupants, excluding taxes and fees.
            TaxesAndFees:
              allOf:
                - $ref: '#/components/schemas/Money'
              description: The total amount of taxes and fees of the rate plan for all occupants.
            TotalPrice:
              allOf:
                - $ref: '#/components/schemas/Money'
              description: |
                The total price of the rate plan, which is equal to the sum of `BaseRate` + `TaxesAndFees`.
                Property mandatory fees are <u>not</u> included in this value as these are paid at the property at
                checkout.
            AvgNightlyRate:
              allOf:
                - $ref: '#/components/schemas/Money'
              description: |
                The average nightly base rate per night per room of the rate plan, which is equal to the `BaseRate`
                divided by `StayDates` and by `room number`.
            AvgNightlyRateWithFees:
              allOf:
                - $ref: '#/components/schemas/Money'
              description: |
                The average nightly rate per night per room of the room type, including all fees except those imposed by the government.
            PropertyMandatoryFees:
              allOf:
                - $ref: '#/components/schemas/Money'
              description: The total mandatory fees which will be charged at the property for the rate plan.
            TotalPriceWithPropertyFees:
              allOf:
                - $ref: '#/components/schemas/Money'
              description: |
                The total price of the rate plan include property mandatory fees, which is equal to the sum of
                `BaseRate` + `TaxesAndFees` + `PropertyMandatoryFees`.
                **NOTE**: Since UK regulations require that `PropertyMandatoryFees` be included in this price, the
                quoted price will <u>only</u> be accurate for the day of quote. This is due to the fact that
                currency exchange fluctuations will change the exact amount of any `PropertyMandatoryFees` that are to
                be collected at the hotel during the guest's stay if the cost is converted into any other currency.
                **CMA Compliance Note (UK)**: Websites doing business in the UK should be displaying this value to
                be compliant with CMA requirements.
            RefundableDamageDeposit:
              allOf:
                - $ref: '#/components/schemas/Money'
              description: The refundable damage deposit.
          description: Container for Price information.
        Links:
          type: object
          properties:
            WebSearchResult:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: Link to web search result page.
            WebDetails:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: Link to web infosite.
          additionalProperties:
            $ref: '#/components/schemas/Link'
          description: |
            Container for list of HATEOAS links to either Expedia website or additional Expedia APIs to complete booking of the selected offer.

            Which links are returned in this section are defined by the links parameter in the Search API query.
            Available links are:
            - WebDetails (link to web infosite)
            - WebSearchResult (link to web search result page)
    StayDates:
      type: object
      properties:
        CheckInDate:
          type: string
          description: The initial day of the property stay in an ISO 8601 Date format [YYYY-MM-DD].
          format: date
        CheckOutDate:
          type: string
          description: The final day of the property stay in an ISO 8601 Date format [YYYY-MM-DD].
          format: date
      description: |
        Container for requested dates of stay.
    Warning:
      type: object
      properties:
        Code:
          type: string
          description: The code of a warning.
          example: NO_RESULTS_FOUND
        Description:
          type: string
          description: A description of what caused the issues.
          example: |
            Sorry, your query completed successfully, but did not return any inventory. Please adjust your 
            search parameters and try again.
    Error:
      type: object
      properties:
        Code:
          type: string
          description: Error code describing the issue
          example: AMBIGUOUS_LOCATION
        Description:
          type: string
          description: A simple description of what the error is.
          example: 'Multiple pickup locations found. '
      description: Container for error list.
    Errors:
      type: object
      properties:
        Errors:
          type: array
          description: Container for error list.
          items:
            $ref: '#/components/schemas/Error'
        TransactionId:
          type: string
          description: A unique identifier for the transaction.
          example: a9e371c4-89d9-4f9c-8df7-df105830e7fe
    APIGatewayError:
      type: object
      properties:
        message:
          type: string
    LodgingQuotesResponse:
      type: object
      properties:
        Warnings:
          type: array
          description: |
            There were some errors or events during the transaction, but the API has still returned a response.

            Container for all warnings.
          items:
            $ref: '#/components/schemas/Warning'
        Count:
          type: integer
          description: The number of properties actually returned in the response.
          format: int32
          example: 99
        TotalPropertyCount:
          type: integer
          description: The number of properties requested.
          format: int32
          example: 230
        TransactionId:
          type: string
          description: Unique identifier for the API transaction.
          example: f06edfa3-27f4-44e6-838c-b8dd3d0a3210
        StayDates:
          $ref: '#/components/schemas/StayDates'
        LengthOfStay:
          type: integer
          description: The number of stay nights.
          format: int32
          example: 3
        Occupants:
          type: array
          description: Container for the list of room occupants.
          items:
            $ref: '#/components/schemas/Occupant'
        Properties:
          type: array
          description: Container for all properties.
          items:
            $ref: '#/components/schemas/Property'
    DateRange:
      type: object
      description: The actual date range for the shown availability.
      properties:
        StartDate:
          type: string
          description: The initial day of the date range in an ISO 8601 Date format [YYYY-MM-DD].
          example: "2022-07-05"
          format: date
        EndDate:
          type: string
          description: The final day of the date range in an ISO 8601 Date format [YYYY-MM-DD].
          example: "2023-07-05"
          format: date
    AvailabilityCalendar:
      type: object
      properties:
        PropertyId:
          type: string
          description: The unique property identifier that designates a single property.
          example: "74041788"
        DateRange:
          $ref: '#/components/schemas/DateRange'
        Availability:
          type: string
          description: |
            A string of codes that shows property availability, one for every day in the specified date range.

            Valid values include Y (available) and N (unavailable).

            ***Note**: The first code stands for availability on the `StartDate` in the `DateRange` and the last one stands 
            for the `EndDate`.*
          example: "YYYYYYNNNNNN"
        ChangeOver:
          type: string
          description: |
            A string of codes that shows changeover action, one for every day in the specified date range.

            Valid values include
            - X (no action possible)
            - C (check-in, checkout)
            - O (checkout only)
            - I (check-in only)
            ***Note**: The first code stands for possible action on the `StartDate` in the `DateRange` and the last one 
            stands for the `EndDate`. All actions are possible if not returned.*
          example: "XXIIICCCOOCC"
        MinPriorNotify:
          type: string
          description: |
            A comma-separated list of numbers that shows how many days before a reservation the booking must occur, one
            for every day in the specified date range. Valid values include 0-999, and 0 indicates no prior notification
            required for a given day. The unit is always day.

            ***Note**: The first number stands for the minimum advance booking days on the `StartDate` in the `DateRange`
            and the last one stands for the `EndDate`. No limitation if not returned.*
          example: "1,1,1,1,1,1,1,1,1,1,1,1,1"
        MinStay:
          type: string
          description: |
            A comma-separated list of numbers that show the minimum number of days a traveler can stay, one for every
            day in the specified date range.

            Valid values include 0-999, and 0 indicates no minimum for a given day. The unit is always day.

            ***Note**: The first number stands for the minimum stay on the `StartDate` in the `DateRange` and the last
            one stands for the `EndDate`. No limitation if not returned.*
          example: "0,0,0,3,3,3,3,3,3,7,7,7,7,7,21,21,21"
        MaxStay:
          type: string
          description: |
            A comma-separated list of numbers that show the maximum number of days a traveler can stay, one for every
            day in the specified date range.

            Valid values include 0-999, and 0 indicates no maximum for a given day. The unit is always day.

            ***Note**: The first number stands for the maximum stay on the `StartDate` in the `DateRange` and the 
            last one stands for the `EndDate`. No limitation if not returned.
          example: "0,0,0,31,31,31,371,370"
    AvailabilityCalendarResponse:
      type: object
      properties:
        Warnings:
          type: array
          description: |
            There were some errors or events during the transaction, but the API has still returned a response.

            Container for all warnings.
          items:
            $ref: '#/components/schemas/Warning'
        TransactionId:
          type: string
          description: Unique identifier for the transaction.
          example: f06edfa3-27f4-44e6-838c-b8dd3d0a3210
        AvailabilityCalendars:
          type: array
          description: A list of the calendar entities.
          items:
            $ref: '#/components/schemas/AvailabilityCalendar'
      example: |-
        {
          "TransactionId": "f06edfa3-27f4-44e6-838c-b8dd3d0a3210",
          "AvailabilityCalendars": [
            {
              "PropertyId": "74041788",
              "DateRange": {
                "StartDate": "2022-02-25",
                "EndDate": "2025-02-24"
              },
              "Availability
              "ChangeOver
              "MinStay": "3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3",
              "MaxStay": "379,378,377,376,375,374,373,372,371,370,369,368,367,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
              "MinPriorNotify": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"             
            },
            {
              "PropertyId": "1",
              "DateRange": {
                "StartDate": "2022-02-27",
                "EndDate": "2023-11-04"
              },
              "Availability
            },
            {
              "PropertyId": "123",
              "DateRange": {
                "StartDate": "2022-02-27",
                "EndDate": "2023-11-04"
              },
              "Availability": "NNNNNNYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYNNNNNYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY",
              "ChangeOver": "XXXXXXIIICCCCCCCCCCCCCCCCCCCCXXXXXCXXXXXXCXXXXXXCXXXXXXCXXXXCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCOOOXXXXXIIICCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCXXXXXXCXXXXXXCXXXXXXCXXXXXXCXXXXXXCXXXXXXCXXXXXXCXXXXXXCXXXXXXCXXXXXXCXXXXXXCXXXXXXCXXXXXXCXXXXXXCXXXXXXCXXXXXXCXXXXXXCXXXXXXCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCOOO",
              "MinStay": "0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,7,6,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,5,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,9,8,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0",
              "MaxStay": "0,0,0,0,0,0,21,21,20,19,18,17,16,21,20,19,18,17,16,15,21,20,19,18,17,16,15,21,20,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,20,19,18,17,16,15,21,20,19,18,17,16,15,21,20,19,18,17,16,15,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,0,0,0",
              "MinPriorNotify": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
            }
          ]
        }
  securitySchemes:
    Authorization:
      type: http
      scheme: basic
